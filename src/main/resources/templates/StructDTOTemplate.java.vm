package ${appContext.getPackageName()};


#if($appContext.isData())
import lombok.Data;
#end
#foreach($imp in ${appContext.getImports()})
import ${imp};
#end

/**
 * this file automatically generated by easy-query struct dto mapping
 * 当前文件是easy-query自动生成的 结构化dto 映射
 * {@link ${appContext.getEntityClassName()} }
 * @author easy-query
 */
#if($appContext.isData())
@Data
#end
public class ${appContext.getDtoName()}{

#macro(renderPropertyUI $props)
    #foreach($prop in $props.getProps())
        ${prop.getPropText()}
    #end

#end

#renderPropertyUI(${appContext.getDtoApp()})
##
##@Override
##public Class<${aptFileCompiler.getEntityClassName()}> getEntityClass(){
##        return entityClass;
##        }
#macro(renderObjectUI $entity)


    /**
     * {@link ${entity.getSelfFullEntityType()} }
     *
     */
    #if($appContext.isData())
    @Data
    #end
    public static class ${entity.getDtoName()}{
        #renderPropertyUI($entity)

    }
#end


#if(${appContext.hasEntities()})
    #foreach($entity in $appContext.getEntities())
            #renderObjectUI($entity)
    #end
#end
##
###renderValueObjectUI($aptValueObjectInfo)
##
##
##/**
##* 数据库列的简单获取
##* @return
##*/
##public ${aptFileCompiler.getSelectorInfo().getName()} FETCHER=new ${aptFileCompiler.getSelectorInfo().getName()}(this,null,SQLSelectAsExpression.empty);
##
##
##public static class ${aptFileCompiler.getSelectorInfo().getName()} extends AbstractFetcher<${aptFileCompiler.getEntityClassProxyName()}, ${aptFileCompiler.getEntityClassName()}, ${aptFileCompiler.getSelectorInfo().getName()}> {
##
##public ${aptFileCompiler.getSelectorInfo().getName()}(${aptFileCompiler.getEntityClassProxyName()} proxy, ${aptFileCompiler.getSelectorInfo().getName()} prev,SQLSelectAsExpression sqlSelectAsExpression){
##        super(proxy,prev,sqlSelectAsExpression);
##        }
##
##
###foreach($property in ${aptFileCompiler.getSelectorInfo().getProperties()})
##    ${property.getComment()}
##        *{@link ${aptFileCompiler.getEntityClassName()}#${property.getPropertyNameGetMethodName()}}
##        */
##public ${aptFileCompiler.getSelectorInfo().getName()} ${property.getProxyPropertyName()}(){
##        return add(getProxy().${property.getProxyPropertyName()}());
##        }
##
###end
##
##@Override
##protected ${aptFileCompiler.getSelectorInfo().getName()} createFetcher(${aptFileCompiler.getEntityClassProxyName()} cp,AbstractFetcher<${aptFileCompiler.getEntityClassProxyName()}, ${aptFileCompiler.getEntityClassName()}, ${aptFileCompiler.getSelectorInfo().getName()}> prev,SQLSelectAsExpression sqlSelectExpression){
##        return new ${aptFileCompiler.getSelectorInfo().getName()}(cp,this,sqlSelectExpression);
##        }
##        }

        }
