package $modelPackage;

#foreach($classImport in $importClassList)
import $classImport;
#end
#if($config.entityProxy)
import com.easy.query.core.annotation.EntityProxy;
#end
#if($config.entityFileProxy)
import com.easy.query.core.annotation.EntityFileProxy;
#end
import com.easy.query.core.annotation.EasyAnonymous;

/**
 * 这是匿名对象类型由easy-query插件生成请勿修改
 * easy-query-plugin automatic generation
 */
#if($config.data)
@Data
#end
#if($config.accessors)
@Accessors(chain = true)
#end
#if($config.requiredArgsConstructor)
@RequiredArgsConstructor
#end
#if($config.builder)
@Builder
#end
#if($config.noArgsConstructor)
@NoArgsConstructor
#end
#if($config.allArgsConstructor)
@AllArgsConstructor
#end
#if($config.entityProxy)
@EntityProxy
@EasyAnonymous(packageWith=${config.packageWithSimpleClassName}.class)
#end
#if($config.entityFileProxy)
@EntityFileProxy
@EasyAnonymous(packageWith=${config.packageWithSimpleClassName}.class,entityFileProxy=true)
#end
public class ${className} {

    #foreach($property in $properties)
    private $property.propertyType  $property.propertyName;

#end

#if($config.data==false)
    #foreach($property in $properties)
    public  $property.propertyType  get${property.methodName}() {
        return ${property.propertyName};
    }

    public void set${property.methodName}(${property.propertyType} ${property.propertyName}) {
        this.${property.propertyName} = ${property.propertyName};
    }
#end
#end
}
