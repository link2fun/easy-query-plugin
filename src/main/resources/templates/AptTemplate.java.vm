package ${aptFileCompiler.getPackageName()};

import com.easy.query.core.expression.parser.core.available.TableAvailable;
import com.easy.query.core.proxy.AbstractProxyEntity;
import com.easy.query.core.proxy.SQLColumn;
#foreach($imp in ${aptFileCompiler.getImports()})
${imp}    
#end

/**
 * this file automatically generated by easy-query, don't modify it
 *
 * @author xuejiaming
 */
public class ${aptFileCompiler.getEntityClassName()}Proxy extends AbstractProxyEntity<${aptFileCompiler.getEntityClassName()}Proxy, ${aptFileCompiler.getEntityClassName()}>{

#macro(renderPropertyUI $valueObject)
#foreach($property in $valueObject.getProperties())
    ${property.comment}
    * {@link ${property.getEntityName()}#${property.propertyName}}
    */
    #if(${property.isValueObject()})
    public ${property.getEntityName()}Proxy ${property.getPropertyName()}(){
        return getValueObject(new ${property.getEntityName()}Proxy(getTable(), getValueProperty("${property.getPropertyName()}")));
    }
    #else
    public SQLColumn<${aptFileCompiler.getEntityClassName()}Proxy,${property.getPropertyType()}> ${property.getPropertyName()}(){
        return get("${property.getPropertyName()}");
    }
    #end

#end
#end
    private static final Class<${aptFileCompiler.getEntityClassName()}> entityClass = ${aptFileCompiler.getEntityClassName()}.class;

    public static ${aptFileCompiler.getEntityClassName()}Proxy createTable() {
        return new ${aptFileCompiler.getEntityClassName()}Proxy();
    }

    private ${aptFileCompiler.getEntityClassName()}Proxy() {
    }

    #renderPropertyUI($aptValueObjectInfo)

    @Override
    public Class<${aptFileCompiler.getEntityClassName()}> getEntityClass() {
        return entityClass;
    }
#macro(renderValueObjectUI $valueObjectParent)
#foreach($valueObject in $valueObjectParent.getChildren())

    public static class ${valueObject.getEntityName()}Proxy extends AbstractValueObjectProxyEntity<${aptFileCompiler.getEntityClassName()}Proxy, ${valueObject.getEntityName()}> {

        private ${valueObject.getEntityName()}Proxy(TableAvailable table, String propertyName) {
            super(table, propertyName);
        }

        #renderPropertyUI($valueObject)

        #renderValueObjectUI($valueObject)
    }
#end
#end

    #renderValueObjectUI($aptValueObjectInfo)

}
